# =================================================================
# YAML-Anker und Vorlagen für wiederverwendbare Schritte
# Die `x-` Präfixe sind eine Konvention für nicht-standardisierte YAML-Erweiterungen.
# Wir definieren hier Vorlagen für die Build-, Push- und Deploy-Schritte.
# Diese Vorlagen verwenden Cloud Build-Substitutionsvariablen (`${_SERVICE_NAME}`, etc.),
# die in den jeweiligen Schritten unten mit konkreten Werten gefüllt werden.
# =================================================================
x-build-step: &build_step
  name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '--build-arg'
    - 'SERVICE_NAME=${_SERVICE_PATH_NAME}'
    - '-t'
    - 'europe-west3-docker.pkg.dev/$PROJECT_ID/agent-images/${_SERVICE_NAME}:$BUILD_ID'
    - '-f'
    - 'python/Dockerfile.generic'
    - '.'

x-push-step: &push_step
  name: 'gcr.io/cloud-builders/docker'
  args:
    - 'push'
    - 'europe-west3-docker.pkg.dev/$PROJECT_ID/agent-images/${_SERVICE_NAME}:$BUILD_ID'

x-deploy-step: &deploy_step
  name: 'gcr.io/cloud-builders/gcloud'
  args:
    - 'run'
    - 'deploy'
    - '${_SERVICE_NAME}'
    - '--image'
    - 'europe-west3-docker.pkg.dev/$PROJECT_ID/agent-images/${_SERVICE_NAME}:$BUILD_ID'
    - '--region'
    - 'europe-west3'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    - '--set-env-vars=GCP_PROJECT=${PROJECT_ID},AGENT_ID_SDA_BE=agent_sda_be,AGENT_ID_LDA=agent_lda,TOPIC_REPORTS=final_reports,TOPIC_SDA_BE_TASKS=sda_be_tasks,TOPIC_LDA_TASKS=lda_tasks,TOPIC_TASK_ASSIGNMENTS=task_assignments'

# =================================================================
# Diese Datei definiert die Schritte, die Google Cloud Build ausführen soll,
# wenn ein Push auf den Branch 'main' erfolgt.
# Sie baut ein Docker-Image für den LDA-Service und pusht es in das Artifact Registry.
# Die Protobuf-Dateien werden auf Qualität und Konsistenz geprüft, bevor das Image gebaut wird.
# Die Protobuf-Dateien befinden sich im Verzeichnis 'proto' und die Dockerfile im Verzeichnis 'python/services/agent_lda'.
# Die fertige 'buf'-Anwendung wird heruntergeladen und verwendet, um die Protobuf-Dateien zu prüfen.
# Die Docker-Images werden in der Region 'europe-west3' gespeichert.
# Die Images werden in das Artifact Registry unter dem Pfad 'europe-west3-docker.pkg.dev/$PROJECT_ID/agent-images/lda-service:$BUILD_ID' gepusht.
# =================================================================
steps:
  # =================================================================
  # SCHRITT 1: Protobuf-Dateien auf Qualität und Konsistenz prüfen
  # (Neue, robustere Methode)
  # =================================================================
  - name: 'gcr.io/cloud-builders/wget'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Lade die fertige 'buf'-Anwendung (v1.54.0) herunter..."
        # Wir laden eine spezifische, aktuelle und stabile Version von buf für Linux
        wget https://github.com/bufbuild/buf/releases/download/v1.54.0/buf-Linux-x86_64 -O /workspace/buf
        
        echo "Mache 'buf' ausführbar..."
        chmod +x /workspace/buf
        
        echo "Führe Buf Linter aus..."
        # Wir führen die heruntergeladene Datei direkt aus
        # /workspace/buf lint --path proto
        # cd proto && /workspace/buf lint
        /workspace/buf lint --config /workspace/buf.yaml /workspace/proto
    id: 'Lint Proto Files'

  # =================================================================
  # SCHRITTE für lda-service
  # =================================================================
  - <<: *build_step
    id: 'Build Docker Image for LDA'
    substitutions:
      _SERVICE_NAME: 'lda-service'
      _SERVICE_PATH_NAME: 'agent_lda'

  - <<: *push_step
    id: 'Push Docker Image for LDA'
    substitutions:
      _SERVICE_NAME: 'lda-service'

  - <<: *deploy_step
    id: 'Deploy LDA to Cloud Run'
    substitutions:
      _SERVICE_NAME: 'lda-service'

  # =================================================================
  # SCHRITTE für sda-be-service
  # =================================================================
  - <<: *build_step
    id: 'Build Docker Image for SDA_BE'
    substitutions:
      _SERVICE_NAME: 'sda-be-service'
      _SERVICE_PATH_NAME: 'agent_sda_be'

  - <<: *push_step
    id: 'Push Docker Image for SDA_BE'
    substitutions:
      _SERVICE_NAME: 'sda-be-service'

  - <<: *deploy_step
    id: 'Deploy SDA_BE to Cloud Run'
    substitutions:
      _SERVICE_NAME: 'sda-be-service'

images:
  - 'europe-west3-docker.pkg.dev/$PROJECT_ID/agent-images/lda-service:$BUILD_ID'
  - 'europe-west3-docker.pkg.dev/$PROJECT_ID/agent-images/sda-be-service:$BUILD_ID'

options:
  logging: CLOUD_LOGGING_ONLY