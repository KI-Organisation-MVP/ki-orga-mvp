steps:
  # =================================================================
  # SCHRITT 1: Protobuf-Dateien auf Qualität und Konsistenz prüfen
  # (Neue, robustere Methode)
  # =================================================================
  - name: 'gcr.io/cloud-builders/wget'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Lade die fertige 'buf'-Anwendung (v1.54.0) herunter..."
        # Wir laden eine spezifische, aktuelle und stabile Version von buf für Linux
        wget https://github.com/bufbuild/buf/releases/download/v1.54.0/buf-Linux-x86_64 -O /workspace/buf
        
        echo "Mache 'buf' ausführbar..."
        chmod +x /workspace/buf
        
        echo "Führe Buf Linter aus..."
        # Wir führen die heruntergeladene Datei direkt aus
        # /workspace/buf lint --path proto
        cd proto && /workspace/buf lint
    id: 'Lint Proto Files'

  # =================================================================
  # SCHRITT 2: Docker Image für den LDA-Service bauen
  # =================================================================
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'europe-west3-docker.pkg.dev/$PROJECT_ID/agent-images/lda-service:$SHORT_SHA',
        './python'
      ]
    id: 'Build Docker Image for LDA'

  # =================================================================
  # SCHRITT 3: Gebautes Docker Image in das Artifact Registry pushen
  # =================================================================
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'europe-west3-docker.pkg.dev/$PROJECT_ID/agent-images/lda-service:$SHORT_SHA',
      ]
    id: 'Push Docker Image to Artifact Registry'

images:
  - 'europe-west3-docker.pkg.dev/$PROJECT_ID/agent-images/lda-service:$SHORT_SHA'

options:
  #TODO: Cashing-Möglichkeiten prüfen
  #caching: 'AUTO'
  logging: CLOUD_LOGGING_ONLY